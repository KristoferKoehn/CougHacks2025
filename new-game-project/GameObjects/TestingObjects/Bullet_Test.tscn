[gd_scene load_steps=5 format=3 uid="uid://d2bc1v1emtsdq"]

[sub_resource type="Shader" id="Shader_bqxej"]
code = "shader_type spatial;


void vertex() {
	VERTEX.y += sin(TIME) * 0.05;
	// Called for every vertex the material is visible on.
}

void fragment() {
	ALBEDO = vec3(1,0,0);
	// Called for every pixel the material is visible on.
}

//void light() {
//	// Called for every pixel for every light affecting the material.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yh7d3"]
render_priority = 0
shader = SubResource("Shader_bqxej")

[sub_resource type="TextMesh" id="TextMesh_bqxej"]
material = SubResource("ShaderMaterial_yh7d3")
text = "BULLET"

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_bqxej"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/replication_mode = 1

[node name="BulletTest" type="RigidBody3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("TextMesh_bqxej")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_bqxej")
