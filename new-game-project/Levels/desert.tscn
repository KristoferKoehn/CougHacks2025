[gd_scene load_steps=17 format=3 uid="uid://c5briidcb8jej"]

[ext_resource type="PackedScene" uid="uid://cw81h10fm33e6" path="res://Assets/mapassets/stormwall.tscn" id="1_w8rqx"]
[ext_resource type="PackedScene" uid="uid://4im3su6q7kjp" path="res://Assets/groundtextures/groundtexturetest.tscn" id="3_5s42w"]
[ext_resource type="PackedScene" uid="uid://ct1kvqheva234" path="res://Assets/mapassets/oddbuilding.tscn" id="4_ardvj"]
[ext_resource type="PackedScene" uid="uid://b8h2hlidv8usw" path="res://Assets/mapassets/bigbuilding.tscn" id="5_enk3p"]
[ext_resource type="PackedScene" uid="uid://f70j8x40lafl" path="res://Assets/mapassets/panel.tscn" id="6_6c331"]
[ext_resource type="PackedScene" uid="uid://icbxmhqfs1j5" path="res://Assets/mapassets/verticalbuilding.tscn" id="7_4rcxv"]
[ext_resource type="PackedScene" uid="uid://jow1p38v05li" path="res://GameObjects/Surface/Surface.tscn" id="7_w8rqx"]

[sub_resource type="Shader" id="Shader_7es51"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.4.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

uniform sampler2D cloud_texture;
uniform sampler2D cloud_texture2;
uniform vec2 cloud_direction;
uniform vec2 cloud_direction2;
uniform vec2 cloud_scale;
uniform float cloud_distance;
uniform float cloud_speed;
uniform float cloud_speed2;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture, (sky_uv*cloud_scale) + (TIME*cloud_direction*cloud_speed*.01)).rgb - texture(cloud_texture2, (sky_uv * cloud_scale) + (TIME * cloud_direction2 * cloud_speed2*.01)).rgb;
	clouds = clouds - smoothstep(0.0, EYEDIR.y, cloud_distance);
	clouds = clamp(clouds,0,1);
	sky += clouds;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_7es51"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1ry02"]
width = 2048
height = 2048
seamless = true
noise = SubResource("FastNoiseLite_7es51")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_1ry02"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_3113s"]
invert = true
seamless = true
noise = SubResource("FastNoiseLite_1ry02")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1ry02"]
shader = SubResource("Shader_7es51")
shader_parameter/sky_top_color = Color(0.385, 0.454, 0.55, 1)
shader_parameter/sky_horizon_color = Color(0.704427, 0.713017, 0.726579, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.206046, 0.174332, 0.137505, 1)
shader_parameter/ground_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/exposure = 1.0
shader_parameter/cloud_texture = SubResource("NoiseTexture2D_1ry02")
shader_parameter/cloud_texture2 = SubResource("NoiseTexture2D_3113s")
shader_parameter/cloud_direction = Vector2(-1, 1)
shader_parameter/cloud_direction2 = Vector2(1, -1)
shader_parameter/cloud_scale = Vector2(0.05, 0.05)
shader_parameter/cloud_distance = 0.02
shader_parameter/cloud_speed = 2.0
shader_parameter/cloud_speed2 = 2.0

[sub_resource type="Sky" id="Sky_7es51"]
sky_material = SubResource("ShaderMaterial_1ry02")

[sub_resource type="Environment" id="Environment_1ry02"]
background_mode = 2
sky = SubResource("Sky_7es51")

[sub_resource type="BoxShape3D" id="BoxShape3D_bhknf"]
size = Vector3(727.513, 1, 793.649)

[node name="desert" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_1ry02")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.873857, 0, -0.486183, 0.486183, -4.37114e-08, 0.873857, -2.12517e-08, -1, -3.81975e-08, 0, 25.8306, -1.12909e-06)

[node name="borders" type="Node3D" parent="."]

[node name="StaticBody3D" type="StaticBody3D" parent="borders"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 116.279, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="StaticBody3D2" type="StaticBody3D" parent="borders"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -177.046, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="StaticBody3D3" type="StaticBody3D" parent="borders"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, -347.758, -177.046, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="StaticBody3D4" type="StaticBody3D" parent="borders"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, 336.139, -177.046, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="StaticBody3D5" type="StaticBody3D" parent="borders"]
transform = Transform3D(1.91069e-15, -4.37114e-08, 1, -1, -4.37114e-08, 0, 4.37114e-08, -1, -4.37114e-08, 1.5201e-05, -177.046, 347.758)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="StaticBody3D6" type="StaticBody3D" parent="borders"]
transform = Transform3D(1.91069e-15, -4.37114e-08, 1, -1, -4.37114e-08, 0, 4.37114e-08, -1, -4.37114e-08, -1.46931e-05, -177.046, -336.139)

[node name="CollisionShape3D" type="CollisionShape3D" parent="borders/StaticBody3D6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.34283, 0, 12.9456)
shape = SubResource("BoxShape3D_bhknf")

[node name="stormwall" parent="." instance=ExtResource("1_w8rqx")]
transform = Transform3D(3.075, 0, 0, 0, 3.075, 0, 0, 0, 3.075, 0, 47.3367, 0)

[node name="Node3D" parent="." instance=ExtResource("3_5s42w")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1022.09, 0)

[node name="terrain" type="Node3D" parent="."]

[node name="oddbuilding" parent="terrain" instance=ExtResource("4_ardvj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -285.295, 0, 0)

[node name="oddbuilding2" parent="terrain" instance=ExtResource("4_ardvj")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 309.91, 0, -5.20344e-05)

[node name="bigbuilding" parent="terrain" instance=ExtResource("5_enk3p")]
transform = Transform3D(0.688393, 0, 0.725338, 0, 1, 0, -0.725338, 0, 0.688393, -95.7314, 0, 114.377)

[node name="panel" parent="terrain/bigbuilding" instance=ExtResource("6_6c331")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 15.6455, 0)

[node name="bigbuilding2" parent="terrain" instance=ExtResource("5_enk3p")]
transform = Transform3D(-0.647867, 0, -0.761753, 0, 1, 0, 0.761753, 0, -0.647867, 93.3399, 0, -95.2038)

[node name="panel" parent="terrain/bigbuilding2" instance=ExtResource("6_6c331")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 15.2217, 0)

[node name="verticalbuilding" parent="terrain" instance=ExtResource("7_4rcxv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -90.7565, 0, -82.327)

[node name="verticalbuilding" parent="terrain/verticalbuilding" instance=ExtResource("7_4rcxv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.8361, 0, 0)

[node name="verticalbuilding2" parent="terrain/verticalbuilding" instance=ExtResource("7_4rcxv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 14.5433)

[node name="verticalbuilding2" parent="terrain" instance=ExtResource("7_4rcxv")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 79.7281, 0, 67.6482)

[node name="verticalbuilding" parent="terrain/verticalbuilding2" instance=ExtResource("7_4rcxv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.8361, 0, 0)

[node name="verticalbuilding2" parent="terrain/verticalbuilding2" instance=ExtResource("7_4rcxv")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 14.5433)

[node name="Surface" parent="." node_paths=PackedStringArray("collisionShape") instance=ExtResource("7_w8rqx")]
collisionShape = NodePath("StaticBody3D/CollisionShape3D")
